diff -uprN qt-everywhere-opensource-src-4.7.0.orig/configure qt-everywhere-opensource-src-4.7.0/configure
--- qt-everywhere-opensource-src-4.7.0.orig/configure	2010-09-10 11:04:46.000000000 +0200
+++ qt-everywhere-opensource-src-4.7.0/configure	2010-11-09 14:54:05.000000000 +0100
@@ -6745,7 +6745,8 @@ if [ "$PLATFORM_X11" = "yes" ]; then
 fi
 
 [ '!' -z "$D_FLAGS" ] && QMakeVar add DEFINES "$D_FLAGS"
-[ '!' -z "$L_FLAGS" ] && QMakeVar add QMAKE_LIBDIR_FLAGS "$L_FLAGS"
+#[ '!' -z "$L_FLAGS" ] && QMakeVar add QMAKE_LIBDIR_FLAGS "$L_FLAGS"
+[ '!' -z "$L_FLAGS" ] && QMakeVar add QMAKE_LIBDIR `echo "$L_FLAGS" | sed 's,-L,,'`
 [ '!' -z "$l_FLAGS" ] && QMakeVar add LIBS "$l_FLAGS"
 
 if [ "$PLATFORM_MAC" = "yes" ]; then
diff -uprN qt-everywhere-opensource-src-4.7.0.orig/mkspecs/win32-g++linux/qmake.conf qt-everywhere-opensource-src-4.7.0/mkspecs/win32-g++linux/qmake.conf
--- qt-everywhere-opensource-src-4.7.0.orig/mkspecs/win32-g++linux/qmake.conf	1970-01-01 01:00:00.000000000 +0100
+++ qt-everywhere-opensource-src-4.7.0/mkspecs/win32-g++linux/qmake.conf	2010-11-12 09:56:41.000000000 +0100
@@ -0,0 +1,115 @@
+#
+# qmake configuration for cross building with Mingw on Linux
+#
+
+MAKEFILE_GENERATOR	= MINGW
+TARGET_PLATFORM		= win32
+TEMPLATE            = app
+CONFIG              += qt warn_on release link_prl copy_dir_files debug_and_release debug_and_release_target precompile_header
+QT                  += core gui
+DEFINES             += UNICODE QT_LARGEFILE_SUPPORT
+QMAKE_INCREMENTAL_STYLE = sublib
+QMAKE_COMPILER_DEFINES  += __GNUC__ WIN32
+QMAKE_EXT_OBJ       = .o
+QMAKE_EXT_RES       = _res.o
+
+include(../common/g++.conf)
+include(../common/unix.conf)
+
+QMAKE_RUN_CC		= $(CC) -c $(CFLAGS) $(INCPATH) -o $obj $src
+QMAKE_RUN_CC_IMP	= $(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<
+QMAKE_RUN_CXX		= $(CXX) -c $(CXXFLAGS) $(INCPATH) -o $obj $src
+QMAKE_RUN_CXX_IMP	= $(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<
+
+##########################################
+# Mingw customization of g++.conf
+QMAKE_CC                = i586-mingw32msvc-gcc
+QMAKE_CXX               = i586-mingw32msvc-g++
+QMAKE_CFLAGS_SHLIB	=
+QMAKE_CFLAGS_STATIC_LIB	=
+QMAKE_CFLAGS_THREAD     += -D_REENTRANT
+QMAKE_CXXFLAGS_SHLIB	=
+QMAKE_CXXFLAGS_STATIC_LIB =
+QMAKE_CXXFLAGS_THREAD	+= $$QMAKE_CFLAGS_THREAD
+QMAKE_CXXFLAGS_RTTI_ON	= -frtti
+QMAKE_CXXFLAGS_RTTI_OFF	= -fno-rtti
+QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads
+QMAKE_CXXFLAGS_EXCEPTIONS_OFF = -fno-exceptions
+
+QMAKE_LINK              = i586-mingw32msvc-g++
+QMAKE_LINK_SHLIB        = i586-mingw32msvc-g++
+QMAKE_LINK_C            = i586-mingw32msvc-gcc
+QMAKE_LINK_C_SHLIB      = i586-mingw32msvc-gcc
+QMAKE_LFLAGS            = -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc
+QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads
+QMAKE_LFLAGS_EXCEPTIONS_OFF =
+QMAKE_LFLAGS_RELEASE	+= -Wl,-s
+QMAKE_LFLAGS_DEBUG      =
+QMAKE_LFLAGS_CONSOLE	+= -Wl,-subsystem,console
+QMAKE_LFLAGS_WINDOWS	+= -Wl,-subsystem,windows
+QMAKE_LFLAGS_DLL        += -shared
+QMAKE_LFLAGS_PLUGIN     += -shared
+
+QMAKE_LINK_OBJECT_MAX	= 30
+QMAKE_LINK_OBJECT_SCRIPT= object_script
+
+##########################################
+# mingw target
+QMAKE_INCDIR            =
+QMAKE_LIBDIR            += $$[QT_INSTALL_LIBS]
+QMAKE_INCDIR_QT         = $$[QT_INSTALL_HEADERS]
+QMAKE_LIBDIR_QT         = $$[QT_INSTALL_LIBS]
+
+QMAKE_INCDIR_X11        =
+QMAKE_LIBDIR_X11        =
+QMAKE_INCDIR_OPENGL     =
+QMAKE_LIBDIR_OPENGL     =
+QMAKE_INCDIR_OPENGL_ES1 =
+QMAKE_LIBDIR_OPENGL_ES1 =
+QMAKE_INCDIR_OPENGL_ES2 =
+QMAKE_LIBDIR_OPENGL_ES2 =
+QMAKE_LIBS_X11          =
+QMAKE_LIBS_X11SM        =
+
+QMAKE_LIBS              =
+QMAKE_LIBS_CORE         = -lkernel32 -luser32 -lshell32 -luuid -lole32 -ladvapi32 -lws2_32
+QMAKE_LIBS_GUI          = -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lws2_32 -lole32 -luuid -luser32 -ladvapi32
+QMAKE_LIBS_OPENGL       = -lglu32 -lopengl32 -lgdi32 -luser32
+QMAKE_LIBS_OPENGL_QT    =
+QMAKE_LIBS_NETWORK      = -lws2_32
+QMAKE_LIBS_COMPAT       = -ladvapi32 -lshell32 -lcomdlg32 -luser32 -lgdi32 -lws2_32
+QMAKE_LIBS_QT_ENTRY     = -lmingw32 -lqtmain
+
+# Linux hosted Qt cross tools
+QMAKE_MOC               = $$[QT_INSTALL_BINS]/moc
+QMAKE_UIC               = $$[QT_INSTALL_BINS]/uic
+QMAKE_IDC               = $$[QT_INSTALL_BINS]/idc
+
+# Linux hosted Mingw tools
+#QMAKE_AR                = i586-mingw32msvc-ar cqs
+QMAKE_LIB               = i586-mingw32msvc-ar -ru
+QMAKE_OBJCOPY           = i586-mingw32msvc-objcopy
+QMAKE_RANLIB            = i586-mingw32msvc-ranlib
+QMAKE_STRIP             = i586-mingw32msvc-strip
+QMAKE_STRIPFLAGS_LIB    += --strip-unneeded
+QMAKE_RC                = i586-mingw32msvc-windres
+#QMAKE_IDL               = midl
+
+# Linux hosted coreutils
+QMAKE_TAR               = tar -cf
+QMAKE_GZIP              = gzip -9f
+QMAKE_ZIP               = zip -r -9
+
+QMAKE_COPY              = cp -f
+QMAKE_COPY_FILE         = $(COPY)
+QMAKE_COPY_DIR          = $(COPY) -r
+QMAKE_MOVE              = mv -f
+QMAKE_DEL_FILE          = rm -f
+QMAKE_DEL_DIR           = rmdir
+QMAKE_CHK_DIR_EXISTS    = test -d
+QMAKE_MKDIR             = mkdir -p
+QMAKE_INSTALL_FILE      = install -m 644 -p
+QMAKE_INSTALL_PROGRAM   = install -m 755 -p
+
+load(qt_config)
+
diff -uprN qt-everywhere-opensource-src-4.7.0.orig/mkspecs/win32-g++linux/qplatformdefs.h qt-everywhere-opensource-src-4.7.0/mkspecs/win32-g++linux/qplatformdefs.h
--- qt-everywhere-opensource-src-4.7.0.orig/mkspecs/win32-g++linux/qplatformdefs.h	1970-01-01 01:00:00.000000000 +0100
+++ qt-everywhere-opensource-src-4.7.0/mkspecs/win32-g++linux/qplatformdefs.h	2010-09-10 11:04:49.000000000 +0200
@@ -0,0 +1,159 @@
+/****************************************************************************
+**
+** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the qmake spec of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** Commercial Usage
+** Licensees holding valid Qt Commercial licenses may use this file in
+** accordance with the Qt Commercial License Agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and Nokia.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights.  These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3.0 as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU General Public License version 3.0 requirements will be
+** met: http://www.gnu.org/copyleft/gpl.html.
+**
+** If you have questions regarding the use of this file, please contact
+** Nokia at qt-info@nokia.com.
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QPLATFORMDEFS_H
+#define QPLATFORMDEFS_H
+
+#ifdef UNICODE
+#ifndef _UNICODE
+#define _UNICODE
+#endif
+#endif
+
+// Get Qt defines/settings
+
+#include "qglobal.h"
+
+#include <tchar.h>
+#include <io.h>
+#include <direct.h>
+#include <stdio.h>
+#include <fcntl.h>
+#include <errno.h>
+#include <sys/stat.h>
+#include <stdlib.h>
+#include <qt_windows.h>
+#include <limits.h>
+
+#if !defined(_WIN32_WINNT) || (_WIN32_WINNT-0 < 0x0500)
+typedef enum {
+    NameUnknown		  = 0, 
+    NameFullyQualifiedDN  = 1, 
+    NameSamCompatible	  = 2, 
+    NameDisplay		  = 3, 
+    NameUniqueId	  = 6, 
+    NameCanonical	  = 7, 
+    NameUserPrincipal	  = 8, 
+    NameCanonicalEx	  = 9, 
+    NameServicePrincipal  = 10, 
+    NameDnsDomain	  = 12
+} EXTENDED_NAME_FORMAT, *PEXTENDED_NAME_FORMAT;
+#endif
+
+#define Q_FS_FAT
+#ifdef QT_LARGEFILE_SUPPORT
+#define QT_STATBUF		struct _stati64		// non-ANSI defs
+#define QT_STATBUF4TSTAT	struct _stati64		// non-ANSI defs
+#define QT_STAT			::_stati64
+#define QT_FSTAT		::_fstati64
+#else
+#define QT_STATBUF		struct _stat		// non-ANSI defs
+#define QT_STATBUF4TSTAT	struct _stat		// non-ANSI defs
+#define QT_STAT			::_stat
+#define QT_FSTAT		::_fstat
+#endif
+#define QT_STAT_REG		_S_IFREG
+#define QT_STAT_DIR		_S_IFDIR
+#define QT_STAT_MASK		_S_IFMT
+#if defined(_S_IFLNK)
+#  define QT_STAT_LNK		_S_IFLNK
+#endif
+#define QT_FILENO		_fileno
+#define QT_OPEN			::_open
+#define QT_CLOSE		::_close
+#ifdef QT_LARGEFILE_SUPPORT
+#define QT_LSEEK		::_lseeki64
+#ifndef UNICODE
+#define QT_TSTAT		::_stati64
+#else
+#define QT_TSTAT		::_wstati64
+#endif
+#else
+#define QT_LSEEK		::_lseek
+#ifndef UNICODE
+#define QT_TSTAT		::_stat
+#else
+#define QT_TSTAT		::_wstat
+#endif
+#endif
+#define QT_READ			::_read
+#define QT_WRITE		::_write
+#define QT_ACCESS		::_access
+#define QT_GETCWD		::_getcwd
+#define QT_CHDIR		::_chdir
+#define QT_MKDIR		::_mkdir
+#define QT_RMDIR		::_rmdir
+#define QT_OPEN_LARGEFILE       0
+#define QT_OPEN_RDONLY		_O_RDONLY
+#define QT_OPEN_WRONLY		_O_WRONLY
+#define QT_OPEN_RDWR		_O_RDWR
+#define QT_OPEN_CREAT		_O_CREAT
+#define QT_OPEN_TRUNC		_O_TRUNC
+#define QT_OPEN_APPEND		_O_APPEND
+#if defined(O_TEXT)
+# define QT_OPEN_TEXT		_O_TEXT
+# define QT_OPEN_BINARY		_O_BINARY
+#endif
+
+#include "../common/c89/qplatformdefs.h"
+
+#ifdef QT_LARGEFILE_SUPPORT
+#undef QT_FSEEK
+#undef QT_FTELL
+#undef QT_OFF_T
+
+#define QT_FSEEK                ::fseeko64
+#define QT_FTELL                ::ftello64
+#define QT_OFF_T                off64_t
+#endif
+
+#define QT_SIGNAL_ARGS		int
+
+#define QT_VSNPRINTF		::_vsnprintf
+#define QT_SNPRINTF		::_snprintf
+
+# define F_OK	0
+# define X_OK	1
+# define W_OK	2
+# define R_OK	4
+
+
+#endif // QPLATFORMDEFS_H
diff -uprN qt-everywhere-opensource-src-4.7.0.orig/qmake/generators/win32/mingw_make.cpp qt-everywhere-opensource-src-4.7.0/qmake/generators/win32/mingw_make.cpp
--- qt-everywhere-opensource-src-4.7.0.orig/qmake/generators/win32/mingw_make.cpp	2010-09-10 11:04:41.000000000 +0200
+++ qt-everywhere-opensource-src-4.7.0/qmake/generators/win32/mingw_make.cpp	2010-11-11 16:20:47.000000000 +0100
@@ -278,6 +278,11 @@ void MingwMakefileGenerator::init()
                                                          + project->first("TARGET_VERSION_EXT") + ".a");
 	project->values("QMAKE_LFLAGS").append(QString("-Wl,--out-implib,") + project->first("MINGW_IMPORT_LIB"));
     }
+    if (project->isActiveConfig("plugin")) {
+        project->values("QMAKE_CFLAGS") += project->values("QMAKE_CFLAGS_PLUGIN");
+        project->values("QMAKE_CXXFLAGS") += project->values("QMAKE_CXXFLAGS_PLUGIN");
+        project->values("QMAKE_LFLAGS") += project->values("QMAKE_LFLAGS_PLUGIN");
+    }
 
     if(!project->values("DEF_FILE").isEmpty())
         project->values("QMAKE_LFLAGS").append(QString("-Wl,") + project->first("DEF_FILE"));
@@ -318,6 +323,8 @@ void MingwMakefileGenerator::fixTargetEx
         project->values("TARGET_EXT").append(".a");
         project->values("QMAKE_LFLAGS").append("-static");
         project->values("TARGET").first() =  "lib" + project->first("TARGET");
+    } else if (project->isActiveConfig("plugin")) {
+        project->values("TARGET_EXT").append(".dll");
     } else {
         Win32MakefileGenerator::fixTargetExt();
     }
@@ -377,6 +384,7 @@ void MingwMakefileGenerator::writeObject
         if (ar_cmd.isEmpty())
             ar_cmd = "ar";
         objectsLinkLine = ar_cmd + " -M < " + ar_script_file;
+        project->values("QMAKE_DISTCLEAN").append(ar_script_file);
     } else {
         QString ld_script_file = var("QMAKE_LINK_OBJECT_SCRIPT") + "." + var("TARGET");
 	if (!var("BUILD_NAME").isEmpty()) {
@@ -384,6 +392,7 @@ void MingwMakefileGenerator::writeObject
 	}
 	createLdObjectScriptFile(ld_script_file, project->values("OBJECTS"));
         objectsLinkLine = ld_script_file;
+        project->values("QMAKE_DISTCLEAN").append(ld_script_file);
     }
     Win32MakefileGenerator::writeObjectsPart(t);
 }
diff -uprN qt-everywhere-opensource-src-4.7.0.orig/src/corelib/codecs/codecs.pri qt-everywhere-opensource-src-4.7.0/src/corelib/codecs/codecs.pri
--- qt-everywhere-opensource-src-4.7.0.orig/src/corelib/codecs/codecs.pri	2010-09-10 11:05:25.000000000 +0200
+++ qt-everywhere-opensource-src-4.7.0/src/corelib/codecs/codecs.pri	2010-11-09 15:32:08.000000000 +0100
@@ -19,7 +19,7 @@ SOURCES += \
 	codecs/qutfcodec.cpp \
 	codecs/qtextcodecplugin.cpp
 
-unix {
+unix|win32-*: {
 	SOURCES += codecs/qfontlaocodec.cpp
 
         contains(QT_CONFIG,iconv) {
